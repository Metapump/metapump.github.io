{"mappings":"MAAO,IAAIA,EAAW,GACXC,EAAU,GAInBD,ECJe,CAAC,cAAc,mDAAmD,6BAA6B,kDAAkD,+CAA+C,+CAA+C,2BAA2B,wDAAwD,wDAAwD,4CAA4C,+CAA+C,8CAA8C,6CAA6C,4CAA4C,2CAA2C,wCAAwC,uCAAuC,2CAA2C,yCAAyC,uCAAuC,6CAA6C,iDAAiD,8CAA8C,uCAAuC,6CAA6C,sCAAsC,0CAA0C,gBAAgB,yCDKhqCC,ECJc,4BCAhB,MAAMC,EAAa,cACbC,EAAc,eAEpBC,KAAKC,iBAAiB,WAAW,SAASC,GACtCA,EAAMC,UAAW,WACb,MAAMC,QAAcC,OAAOC,KAAKR,SAC1BM,EAAMG,IAAI,IAAIC,QAAQT,EAAa,CAACK,MAAO,kBAC3CA,EAAMK,OAAOb,IAHN,IAKjBI,KAAKU,iBAGTV,KAAKC,iBAAiB,YAAaC,IAC/BA,EAAMC,UAAW,WACT,sBAAuBH,KAAKW,oBACxBX,KAAKW,aAAaC,kBAAkBC,SAE5C,MAAMC,QAAaT,OAAOS,aACpBC,QAAQC,IAAIF,EAAKG,KAAIC,GAAOA,IAAQrB,GAAWQ,OAAOc,OAAOD,OALtD,IAOjBlB,KAAKoB,QAAQC,WAGjBrB,KAAKC,iBAAiB,SAAS,SAASC,GACT,aAAvBA,EAAMoB,QAAQC,MACdrB,EAAMsB,YAAa,WACf,IACA,MAAMC,QAAwBvB,EAAMuB,gBACpC,GAAIA,EACA,OAAOA,EAIX,aAD8BC,MAAMxB,EAAMoB,SAExC,MAAOK,GACTC,QAAQC,IAAI,iEAAkEF,GAE9E,MAAMvB,QAAcC,OAAOC,KAAKR,GAEhC,aAD6BM,EAAM0B,MAAM/B,KAb1B","sources":["node_modules/@parcel/service-worker/service-worker.js","node_modules/@parcel/service-worker/runtime-e07348870fabe63f.js","src/service-worker.js"],"sourcesContent":["export let manifest = [];\nexport let version = '';\n\n// Called by the runtime.\nexport function _register(m, v) {\n  manifest = m;\n  version = v;\n}\n","import {_register} from '@parcel/service-worker';\nconst manifest = [\"/index.html\",\"/safari-pinned-tab.c6225cfb.svg\",\"/static/mstile-150x150.png\",\"/apple-touch-icon.da275643.png\",\"/favicon-32x32.51f711fc.png\",\"/favicon-16x16.936aeab3.png\",\"/static/site.webmanifest\",\"/android-chrome-192x192.bd3895fe.png\",\"/android-chrome-256x256.fa251919.png\",\"/favicon512.ae204955.png\",\"/metapumpCity.b063b752.webm\",\"/metapumpCity.d372d429.mp4\",\"/logo-header.5fd2768b.svg\",\"/metaverse.4a9b4b62.webm\",\"/metaverse.3ca8ee9e.mp4\",\"/intro.4f52466b.webm\",\"/intro.a203decc.mp4\",\"/dumbbell.359e150d.webp\",\"/weight.fd522543.webp\",\"/rope.1aecdbcb.webp\",\"/jay-avatar.b26a9031.webp\",\"/whitney-avatar.142702e8.webp\",\"/footer-logo.6d6082ae.webp\",\"/index.b419db7b.css\",\"/roadmap-bg.75e51e0c.webp\",\"/index.85172f1b.js\",\"/metamask.06a053cb.svg\",\"/offline.html\",\"/nft-1.76064875.webp\"];\nconst version = \"c4907935\";\n_register(manifest, version);\n","import {manifest, version} from '@parcel/service-worker';\r\n\r\nconst CACHE_NAME = 'metapump-v2';\r\nconst OFFLINE_URL = 'offline.html';\r\n\r\nself.addEventListener('install', function(event) {\r\n    event.waitUntil((async () => {\r\n        const cache = await caches.open(CACHE_NAME);\r\n        await cache.add(new Request(OFFLINE_URL, {cache: 'reload'}));\r\n        await cache.addAll(manifest);\r\n    })());\r\n    self.skipWaiting();\r\n});\r\n\r\nself.addEventListener('activate', (event) => {\r\n    event.waitUntil((async () => {\r\n        if ('navigationPreload' in self.registration) {\r\n          await self.registration.navigationPreload.enable();\r\n        }\r\n        const keys = await caches.keys();\r\n        await Promise.all(keys.map(key => key !== version && caches.delete(key)));\r\n    })());\r\n    self.clients.claim();\r\n});\r\n\r\nself.addEventListener('fetch', function(event) {\r\n    if (event.request.mode === 'navigate') {\r\n        event.respondWith((async () => {\r\n            try {\r\n            const preloadResponse = await event.preloadResponse;\r\n            if (preloadResponse) {\r\n                return preloadResponse;\r\n            }\r\n    \r\n            const networkResponse = await fetch(event.request);\r\n            return networkResponse;\r\n            } catch (error) {\r\n            console.log('[Service Worker] Fetch failed; returning offline page instead.', error);\r\n    \r\n            const cache = await caches.open(CACHE_NAME);\r\n            const cachedResponse = await cache.match(OFFLINE_URL);\r\n            return cachedResponse;\r\n            }\r\n        })());\r\n    }\r\n});"],"names":["$2039b88b1be162b9$export$e538f94cc8cf4db8","$2039b88b1be162b9$export$83d89fbfd8236492","$a9c0d08296ac1ab0$var$CACHE_NAME","$a9c0d08296ac1ab0$var$OFFLINE_URL","self","addEventListener","event","waitUntil","cache","caches","open","add","Request","addAll","skipWaiting","registration","navigationPreload","enable","keys","Promise","all","map","key","delete","clients","claim","request","mode","respondWith","preloadResponse","fetch","error","console","log","match"],"version":3,"file":"service-worker.js.map"}