{"mappings":"AAAA,MAAMA,WAAa,cACbC,YAAc,aAEpBC,KAAKC,iBAAiB,WAAW,SAASC,GACxCC,QAAQC,IAAI,2BAEZF,EAAMG,UAAW,WACf,MAAMC,QAAcC,OAAOC,KAAKV,kBAG1BQ,EAAMG,IAAI,IAAIC,QAAQX,YAAa,CAACO,MAAO,aAJlC,IAOjBN,KAAKW,iBAGPX,KAAKC,iBAAiB,YAAaC,IACjCC,QAAQC,IAAI,4BACZF,EAAMG,UAAW,WACX,sBAAuBL,KAAKY,oBACxBZ,KAAKY,aAAaC,kBAAkBC,UAF7B,IAKjBd,KAAKe,QAAQC,WAGfhB,KAAKC,iBAAiB,SAAS,SAASC,GACX,aAAvBA,EAAMe,QAAQC,MAChBhB,EAAMiB,YAAa,WACjB,IACE,MAAMC,QAAwBlB,EAAMkB,gBACpC,GAAIA,EACF,OAAOA,EAGT,aAD8BC,MAAMnB,EAAMe,SAE1C,MAAOK,GACPnB,QAAQC,IAAI,iEAAkEkB,GAC9E,MAAMhB,QAAcC,OAAOC,KAAKV,YAEhC,aAD6BQ,EAAMiB,MAAMxB,eAX1B","sources":["src/service-worker.js"],"sourcesContent":["const CACHE_NAME = 'metapump-v2';\r\nconst OFFLINE_URL = 'index.html';\r\n\r\nself.addEventListener('install', function(event) {\r\n  console.log('[ServiceWorker] Install');\r\n  \r\n  event.waitUntil((async () => {\r\n    const cache = await caches.open(CACHE_NAME);\r\n    // Setting {cache: 'reload'} in the new request will ensure that the response\r\n    // isn't fulfilled from the HTTP cache; i.e., it will be from the network.\r\n    await cache.add(new Request(OFFLINE_URL, {cache: 'reload'}));\r\n  })());\r\n  \r\n  self.skipWaiting();\r\n});\r\n\r\nself.addEventListener('activate', (event) => {\r\n  console.log('[ServiceWorker] Activate');\r\n  event.waitUntil((async () => {\r\n    if ('navigationPreload' in self.registration) {\r\n      await self.registration.navigationPreload.enable();\r\n    }\r\n  })());\r\n  self.clients.claim();\r\n});\r\n\r\nself.addEventListener('fetch', function(event) {\r\n  if (event.request.mode === 'navigate') {\r\n    event.respondWith((async () => {\r\n      try {\r\n        const preloadResponse = await event.preloadResponse;\r\n        if (preloadResponse) {\r\n          return preloadResponse;\r\n        }\r\n        const networkResponse = await fetch(event.request);\r\n        return networkResponse;\r\n      } catch (error) {\r\n        console.log('[Service Worker] Fetch failed; returning offline page instead.', error);\r\n        const cache = await caches.open(CACHE_NAME);\r\n        const cachedResponse = await cache.match(OFFLINE_URL);\r\n        return cachedResponse;\r\n      }\r\n    })());\r\n  }\r\n});"],"names":["CACHE_NAME","OFFLINE_URL","self","addEventListener","event","console","log","waitUntil","cache","caches","open","add","Request","skipWaiting","registration","navigationPreload","enable","clients","claim","request","mode","respondWith","preloadResponse","fetch","error","match"],"version":3,"file":"service-worker.js.map"}